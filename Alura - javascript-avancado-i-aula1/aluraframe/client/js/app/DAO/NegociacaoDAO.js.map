{"version":3,"sources":["../../app-es6/DAO/NegociacaoDAO.js"],"names":["NegociacaoDAO","constructor","connection","_connection","_store","adiciona","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","listaTodos","cursor","openCursor","negociacoes","atual","target","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","apagaTodos","clear"],"mappings":";AACA,MAAMA,aAAN,CAAoB;;AAEhBC,gBAAYC,UAAZ,EAAwB;;AAEpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;AAEDC,aAASC,UAAT,EAAqB;;AAEjB,eAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;;AAEnC,gBAAIC,UAAU,KAAKP,WAAL,CACGQ,WADH,CACe,CAAC,KAAKP,MAAN,CADf,EAC8B,WAD9B,EAEGQ,WAFH,CAEe,KAAKR,MAFpB,EAGGS,GAHH,CAGOP,UAHP,CAAd;;AAKAI,oBAAQI,SAAR,GAAoBC,KAAKP,SAAzB;;AAEAE,oBAAQM,OAAR,GAAkBD,KAAK;AACnBN,uBAAO,0CAAP;AACH,aAFD;AAGH,SAZM,CAAP;AAaH;;AAEDQ,iBAAa;;AAET,eAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;;AAEnC,gBAAIS,SAAS,KAAKf,WAAL,CACAQ,WADA,CACY,CAAC,KAAKP,MAAN,CADZ,EAC2B,WAD3B,EAEAQ,WAFA,CAEY,KAAKR,MAFjB,EAGAe,UAHA,EAAb;;AAKA,gBAAIC,cAAc,EAAlB;;AAEAF,mBAAOJ,SAAP,GAAmBC,KAAK;;AAEpB,oBAAIM,QAAQN,EAAEO,MAAF,CAASC,MAArB;;AAEA,oBAAGF,KAAH,EAAS;;AAEL,wBAAIG,OAAOH,MAAMI,KAAjB;;AAEAL,gCAAYM,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAT,0BAAMU,QAAN;AACH,iBAPD,MAOM;AACFvB,4BAAQY,WAAR;AACH;AAEJ,aAfD;;AAiBAF,mBAAOF,OAAP,GAAiBD,KAAK;;AAElBN,uBAAO,yCAAP;AACH,aAHD;AAIH,SA9BM,CAAP;AA+BH;;AAEDuB,iBAAa;;AAET,eAAO,IAAIzB,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;;AAEnC,gBAAIC,UAAU,KAAKP,WAAL,CACDQ,WADC,CACW,CAAC,KAAKP,MAAN,CADX,EAC0B,WAD1B,EAEDQ,WAFC,CAEW,KAAKR,MAFhB,EAGD6B,KAHC,EAAd;;AAKAvB,oBAAQI,SAAR,GAAoBC,KAAKP,QAAQ,oCAAR,CAAzB;;AAEAE,oBAAQM,OAAR,GAAkBD,KAAKN,OAAO,0CAAP,CAAvB;AACH,SAVM,CAAP;AAWH;AAzEe","file":"NegociacaoDAO.js","sourcesContent":["\r\nclass NegociacaoDAO {\r\n\r\n    constructor(connection) {\r\n        \r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n\r\n        return new Promise((resolve,reject) => {\r\n\r\n            let request = this._connection\r\n                            .transaction([this._store], 'readwrite')\r\n                            .objectStore(this._store)\r\n                            .add(negociacao);\r\n\r\n            request.onsuccess = e => resolve();\r\n        \r\n            request.onerror = e => {\r\n                reject('Não foi possível adicionar a negociação.')\r\n            }\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n\r\n        return new Promise((resolve,reject) => {\r\n\r\n            let cursor = this._connection\r\n                        .transaction([this._store], 'readwrite')\r\n                        .objectStore(this._store)\r\n                        .openCursor();\r\n\r\n            let negociacoes = [];\r\n            \r\n            cursor.onsuccess = e => {\r\n\r\n                let atual = e.target.result;\r\n\r\n                if(atual){\r\n\r\n                    let dado = atual.value;\r\n\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n\r\n                    atual.continue();\r\n                }else {\r\n                    resolve(negociacoes);\r\n                }\r\n\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n\r\n                reject('Não foi possível listar as negociações.');\r\n            }\r\n        });\r\n    }\r\n\r\n    apagaTodos() {\r\n\r\n        return new Promise((resolve,reject) => {\r\n\r\n            let request = this._connection\r\n                        .transaction([this._store], 'readwrite')\r\n                        .objectStore(this._store)\r\n                        .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações removidas com sucesso.')\r\n\r\n            request.onerror = e => reject('Não foi possível remover as negociações.')\r\n        });\r\n    }\r\n}"]}